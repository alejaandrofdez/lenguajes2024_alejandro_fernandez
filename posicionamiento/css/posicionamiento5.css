* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
}

.header {
    background-color: blue;
    color: black;
    padding: 20px;
    text-align: center;
    font-size: 10vw;
}

.sticky-container {
    display: flex;
    flex-wrap: wrap;
}

.fixed-div {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: purple;
    color: white;
    width: 15vw;
    height: 15vw;
    max-width: 100px;
    max-height: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3vw;
}

.sticky-div {
    background-color: gray;
    color: black;
    padding: 20px;
    text-align: left;
    font-size: 1vw;
}

.left-div {
    background-color: red;
    flex: 1;
    min-height: 20vh;
}

.main-div {
    background-color: green;
    flex: 1;
    min-height: 40vh;
}
.right-div{
    background-color: yellow;
    flex: 1;
    min-height: 40vh;
}

.scroll-div {
    background-color: orange;
    min-height: 200vh; /* Aumentamos el tamaño para generar scroll */
    flex: 2;

}

.scroll-div p {
    text-align: left;  
    font-size: 1vw;
}
@media (max-width: 768px) {
    /* 
    Este bloque de estilos se aplica solo a pantallas con un ancho máximo de 768px.
    Es útil para dispositivos móviles o tabletas pequeñas.
    */
    
    .sticky-container {
        flex-direction: column; 
        /* Cambia la orientación del contenedor flex a columna.
           Los elementos hijos se apilan verticalmente en lugar de estar en fila. */
    }

    .left-div, .main-div, .sticky-div {
        flex: none; 
        /* Desactiva el comportamiento flexible (crecimiento/reducción) de los elementos en un contenedor flex. */
        
        min-height: 30vh; 
        /* Establece una altura mínima de 30% de la altura de la ventana visible (viewport).
           Esto asegura que cada sección tenga un tamaño mínimo razonable en pantallas pequeñas. */
    }

    .fixed-div {
        width: 20vw; 
        /* Define el ancho como el 20% del ancho de la ventana visible (viewport). */
        
        height: 20vw; 
        /* Define la altura como igual al ancho, asegurando que el elemento sea cuadrado. */
    }
}


